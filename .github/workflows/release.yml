name: Build, Test, and Release AstraOps CLI

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install
        env:
          SKIP_ASTRAOPS_CLI_POSTINSTALL: 1

      - name: Build Linux binary
        if: matrix.os == 'ubuntu-latest'
        run: bun run build:linux

      - name: Build Windows binary
        if: matrix.os == 'windows-latest'
        run: bun run build:windows

      - name: Build MacOS binary
        if: matrix.os == 'macos-latest'
        run: bun run build:macos

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: astraops-cli-${{ matrix.os }}
          path: |
            dist/astraops-cli-linux
            dist/astraops-cli-windows.exe
            dist/astraops-cli-macos

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/**/astraops-cli-linux
            ./artifacts/**/astraops-cli-windows.exe
            ./artifacts/**/astraops-cli-macos
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install
        env:
          SKIP_ASTRAOPS_CLI_POSTINSTALL: 1

      - name: Publish to NPM
        run: bun publish --access public
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      